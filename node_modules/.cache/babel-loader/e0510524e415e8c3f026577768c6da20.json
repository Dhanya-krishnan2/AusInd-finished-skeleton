{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhany\\\\OneDrive\\\\Desktop\\\\React-website\\\\react-website-v1\\\\src\\\\components\\\\Form.jsx\";\nimport React, { useState } from 'react';\nimport './Form.css'; // making a form for the quote to initiate\n\nexport default function Form() {\n  const [values, setValues] = useState({\n    fullName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    address: \"\"\n  }); // here we are declaring a hook to show whether the submitting quote is successful or not\n  // and using unary operator for submission if successful submission giving the message otherwise null\n\n  const [submitted, setSubmitted] = useState(false); // this handlefunction is to accept the name entering of a user, we using the spread operator to spread the values\n\n  const handleFullNameInputChange = event => {\n    setValues({ ...values,\n      fullName: event.target.value\n    });\n  }; // setting it for email \n\n\n  const handleEmailInputChange = event => {\n    setValues({ ...values,\n      email: event.target.value\n    });\n  }; // setting it for phone number\n\n\n  const handlePhoneNumberInputChange = event => {\n    setValues({ ...values,\n      phoneNumber: event.target.value\n    });\n  }; // setting it for address\n\n\n  const handleAddressInputChange = event => {\n    setValues({ ...values,\n      address: event.target.value\n    });\n  }; // for the validation to happen setting up the hook\n\n\n  const [valid, setValidation] = useState(false); // setting up events for submit button\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.fullName && values.email && values.phoneNumber && values.address) {\n      setValidation(true);\n    }\n\n    setSubmitted(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }\n  }, \" Get A Free Quote Today \"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }\n  }, \"  Schdule A Free Consultation Now\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"register-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, submitted && valid ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }\n  }, \" Success! Thank you for registering with us\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    onChange: handleFullNameInputChange,\n    placeholder: \"Full-name\",\n    name: \"fullName\",\n    value: values.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), submitted && !values.fullName ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 43\n    }\n  }, \" Please enter you full name\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    onChange: handleEmailInputChange,\n    placeholder: \"\\r Email addres\",\n    name: \"email\",\n    value: values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), submitted && !values.email ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 39\n    }\n  }, \" Please enter you email address\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    onChange: handlePhoneNumberInputChange,\n    placeholder: \"\\r Phone Number\",\n    name: \"phoneNumber\",\n    value: values.phoneNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), submitted && !values.email ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 39\n    }\n  }, \" Please enter you phonenumber address\") : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    onChange: handleAddressInputChange,\n    placeholder: \"\\r address\",\n    name: \"address\",\n    value: values.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), submitted && !values.address ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, \" Please enter your address\") : null, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"form-field\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"GET MY FREE QUOTE\")));\n}","map":{"version":3,"sources":["C:/Users/dhany/OneDrive/Desktop/React-website/react-website-v1/src/components/Form.jsx"],"names":["React","useState","Form","values","setValues","fullName","email","phoneNumber","address","submitted","setSubmitted","handleFullNameInputChange","event","target","value","handleEmailInputChange","handlePhoneNumberInputChange","handleAddressInputChange","valid","setValidation","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Form.css';\r\n// making a form for the quote to initiate\r\nexport default function Form() {\r\n    const [values, setValues] = useState({\r\n        \r\n        fullName: \"\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        address: \"\",\r\n\r\n    });\r\n    // here we are declaring a hook to show whether the submitting quote is successful or not\r\n    // and using unary operator for submission if successful submission giving the message otherwise null\r\n    const [submitted, setSubmitted] = useState(false);\r\n    // this handlefunction is to accept the name entering of a user, we using the spread operator to spread the values\r\n    const handleFullNameInputChange = (event) => {\r\n        setValues({...values, fullName: event.target.value})\r\n    }\r\n    // setting it for email \r\n    const handleEmailInputChange = (event) => {\r\n        setValues({...values, email: event.target.value})\r\n    }\r\n    // setting it for phone number\r\n    const handlePhoneNumberInputChange = (event) => {\r\n        setValues({...values, phoneNumber: event.target.value})\r\n    }\r\n    // setting it for address\r\n    const handleAddressInputChange = (event) => {\r\n        setValues( {...values, address: event.target.value})\r\n    }\r\n    // for the validation to happen setting up the hook\r\n      const [valid, setValidation ] = useState(false);\r\n    // setting up events for submit button\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(values.fullName && values.email && values.phoneNumber && values.address){\r\n            setValidation(true);\r\n        }\r\n        setSubmitted(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n             <div className=\"heading-color\">\r\n             <h1> Get A Free Quote Today </h1>\r\n             <h3>  Schdule A Free Consultation Now</h3>\r\n             </div>\r\n        <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        {submitted && valid ? <div className=\"success-message\"> Success! Thank you for registering with us</div> :null}\r\n         \r\n        <input className=\"form-field\"\r\n               onChange={handleFullNameInputChange}\r\n               placeholder=\"Full-name\"\r\n               name=\"fullName\"\r\n               value={values.fullName}\r\n\r\n        />\r\n        {submitted &&  !values.fullName ? <span> Please enter you full name</span> : null }\r\n        \r\n        <input className=\"form-field\"\r\n             onChange={handleEmailInputChange}\r\n               placeholder=\"\r\n               Email addres\"\r\n               name=\"email\"\r\n               value={values.email}\r\n        />\r\n        {submitted && !values.email ? <span> Please enter you email address</span> : null}\r\n        \r\n        <input className=\"form-field\"\r\n               onChange={handlePhoneNumberInputChange}\r\n               placeholder=\"\r\n               Phone Number\"\r\n               name=\"phoneNumber\"\r\n               value={values.phoneNumber}\r\n        />\r\n        {submitted && !values.email ? <span> Please enter you phonenumber address</span> : null}\r\n        <input className=\"form-field\"\r\n               onChange={handleAddressInputChange}\r\n               placeholder=\"\r\n               address\"\r\n               name=\"address\"\r\n               value={values.address}\r\n        />\r\n        { submitted && !values.address ?<span> Please enter your address</span>: null}\r\n        \r\n        \r\n        <button class=\"form-field\" type=\"submit\">\r\n          GET MY FREE QUOTE\r\n        </button>\r\n        </form>\r\n            \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}